- name: Setup vi alternatives to use NeoVim
  become: yes
  become_user: root
  alternatives:
    name: vi
    path: /usr/bin/nvim
  tags: pkgs
  when: ansible_os_family != "Darwin"

- name: Install bash-it
  import_role:
    name: ansible-bash_it
  vars:
    users: '{{dotfiles_user}}'
    theme: '{{bash_it_theme}}'
    aliases: [general]
    plugins: [alias-completion, base]
    completions:
      - awscli
      - bash-it
      - brew
      - docker-compose
      - docker-machine
      - docker
      - git
      - kubectl
      - npm
      - nvm
      - ssh
      - system
      - tmux
  tags: [bash-it]

- name: Install Node Version Manager (nvm)
  become: yes
  become_user: root
  import_role:
    name: ansible-nvm
  vars:
    nvm_version: HEAD
    nvm_default_node_version: '10'
    nvm_node_versions: 
      - '{{nvm_default_node_version}}'
    nvm_user: '{{dotfiles_user}}'
    nvm_npm_pkgs: 
      - pkg: yarn
        version: latest
  tags: [nvm]

- name: rustup.sh
  shell: curl https://sh.rustup.rs -sSf | sh -s -- -y
  args:
    warn: false

- name: add components
  shell: ~/.cargo/bin/rustup component add {{ item }}
  with_items: [clippy]

- name: cargo install packages
  shell: "[ ! -e ~/.cargo/bin/{{ item }} ] && ~/.cargo/bin/rustup run stable cargo install {{ item }} || exit 0"
  with_items: [procs, rustfmt]
